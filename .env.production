# ===========================================
# CONFIGURACIÓN PARA DIGITALOCEAN DROPLET
# ===========================================

# Entorno
NODE_ENV=production

# Servidor
PORT=3001
HOST=0.0.0.0

# Base de datos (Neon PostgreSQL)
#DATABASE_URL=postgresql://username:password@ep-example-123456.us-east-1.aws.neon.tech/neondb?sslmode=require
DATABASE_URL=postgresql://neondb_owner:npg_IqHxT9e6UrMf@ep-hidden-thunder-ad7nh364-pooler.c-2.us-east-1.aws.neon.tech/crm_system?sslmode=require&channel_binding=require


# Alternativamente, usar parámetros individuales:
# DB_HOST=ep-example-123456.us-east-1.aws.neon.tech
# DB_PORT=5432
# DB_NAME=neondb
# DB_USER=username
# DB_PASSWORD=password
# DB_SSL=true

# JWT (GENERAR UNA CLAVE SEGURA)
JWT_SECRET=a8f5f167f44f4964e6c998dee827110c

# URLs
FRONTEND_URL=http://159.65.169.239:3001
BACKEND_URL=http://159.65.169.239:3001

# CORS Origins (separados por comas)
CORS_ORIGINS=http://159.65.169.239:3001,http://localhost:3000,http://127.0.0.1:3000

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
LOGIN_RATE_LIMIT_MAX=5

# Logs
LOG_LEVEL=info
LOG_FILE=logs/app.log

# ===========================================
# INSTRUCCIONES DE DESPLIEGUE
# ===========================================
# 1. Copia este archivo como .env en tu droplet
# 2. Reemplaza 'tu_droplet_ip' con la IP real de tu droplet
# 3. Configura DATABASE_URL con tus credenciales de Neon
# 4. Genera un JWT_SECRET seguro: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# 5. Asegúrate de que el puerto 3001 esté abierto en el firewall
# 6. Ejecuta: NODE_ENV=production npm run server
